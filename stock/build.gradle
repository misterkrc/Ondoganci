description = 'OpenSRP stock client library'

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
    }
}
def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = '0.8.0'
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultPublishConfig !isReleaseBuild() ? "debug" : "release"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 14
        versionName "1.4.1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    // avoid errors with message 'Duplicate files copied in APK ...'
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

dependencies {
    implementation ('org.smartregister:opensrp-client-native-form:1.2.1-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'org.jacoco', module: 'org.jacoco.agent'
        exclude group: 'org.android.support', module: 'cardview-v7'
    }

    implementation ('org.smartregister:opensrp-client-core:1.3.2-SNAPSHOT@aar') {
        transitive true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.github.johnkil.print', module: 'print'
    }

    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'

    implementation 'com.jjoe64:graphview:4.2.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'

    // PowerMock
    def powerMockVersion = '1.7.3'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"

    androidTestImplementation ('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}